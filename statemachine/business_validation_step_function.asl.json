{
  "Comment": "Business Validation State Machine",
  "StartAt": "Choice based on validation results",
  "States": {
    "Choice based on validation results": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.input.errors",
          "IsPresent": true,
          "Next": "Choice"
        }
      ],
      "Default": "Save Hash in ShipmentHash"
    },
    "Save Hash in ShipmentHash": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:putItem",
      "Parameters": {
        "TableName": "${ShipmentHashTable}",
        "Item": {
          "addrHashCode": {
            "S.$": "$.input.addrHash.addrHashCode"
          },
          "addrDateHash": {
            "S.$": "$.input.addrHash.addrDateHash"
          },
          "addrCombo": {
            "S.$": "$.input.addrHash.addrCombo"
          },
          "wasProcessed": {
            "BOOL": "false"
          }
        }
      },
      "Next": "Save Shipment Record",
      "ResultPath": "$.shipmentHashResult",
      "Retry": [
        {
          "ErrorEquals": [
            "States.TaskFailed"
          ],
          "BackoffRate": 2,
          "IntervalSeconds": 1,
          "MaxAttempts": 6,
          "Comment": "Retry DDB inserts/updates"
        }
      ]
    },
    "Save Shipment Record": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:putItem",
      "Parameters": {
        "TableName": "${ShipmentRecordTable}",
        "Item": {
          "addrDateHash": {
            "S.$": "$.input.addrHash.addrDateHash"
          },
          "recordId": {
            "S.$": "$.input.recordId"
          },
          "processTime": {
            "S.$": "$$.Execution.StartTime"
          },
          "body": {
            "S.$": "States.JsonToString($.input)"
          }
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.TaskFailed"
          ],
          "BackoffRate": 2,
          "IntervalSeconds": 1,
          "MaxAttempts": 6,
          "Comment": "Retry DDB inserts/updates"
        }
      ],
      "End": true
    },
    "Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.input.errors.manualfix",
          "IsPresent": true,
          "Next": "Send for Manual correction/resubmits"
        }
      ],
      "Default": "Send to Error Queue"
    },
    "Send to Error Queue": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sqs:sendMessage",
      "Parameters": {
        "MessageBody.$": "$",
        "QueueUrl": "${ShipmentDLQueueUrl}"
      },
      "End": true
    },
    "Send for Manual correction/resubmits": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sqs:sendMessage",
      "Parameters": {
        "MessageBody.$": "$",
        "QueueUrl": "${ShipmentManualResubmitQueueUrl}"
      },
      "End": true
    }
  }
}
