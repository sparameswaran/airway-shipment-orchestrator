{
  "Comment": "Business Validation State Machine",
  "StartAt": "Choice based on validation results",
  "States": {
    "Choice based on validation results": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.input.error",
          "IsPresent": true,
          "Next": "Choice"
        }
      ],
      "Default": "Save Hash in ShipmentHash"
    },
    "Save Hash in ShipmentHash": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:putItem",
      "Parameters": {
        "TableName": "${ShipmentHashTable}",
        "Item": {
          "addrHashCode": {
            "S.$": "$.input.hashdata.hashcode"
          },
          "wasProcessed": {
            "BOOL": "false"
          }
        }
      },
      "Next": "Save Shipment Record",
      "ResultPath": "$.shipmentHashResult"
    },
    "Save Shipment Record": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:putItem",
      "Parameters": {
        "TableName": "${ShipmentRecordTable}",
        "Item": {
          "addrHashCode": {
            "S.$": "$.input.hashdata.hashcode"
          },
          "recordId": {
            "S.$": "$.input.recordId"
          },
          "processTime": {
            "S.$": "$$.Execution.StartTime"
          },
          "body": {
            "S.$": "States.JsonToString($.input)"
          }
        }
      },
      "End": true
    },
    "Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.input.error",
          "IsPresent": true,
          "Next": "Modify Payload"
        }
      ],
      "Default": "Send to Manual correction/resubmits"
    },
    "Modify Payload": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${BusinessRulesValidatorLambdaArn}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Resubmit valid payload"
    },
    "Resubmit valid payload": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sqs:sendMessage",
      "Parameters": {
        "MessageBody.$": "$",
        "QueueUrl": "${ShipmentQueueUrl}"
      },
      "End": true
    },
    "Send to Manual correction/resubmits": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sqs:sendMessage",
      "Parameters": {
        "MessageBody.$": "$",
        "QueueUrl": "${ShipmentDLQueueUrl}"
      },
      "End": true
    }
  }
}
