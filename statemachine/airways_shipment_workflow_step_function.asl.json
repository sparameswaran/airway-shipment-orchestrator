{
  "Comment": "Airway Shipment Workflow State Machine",
  "StartAt": "Choice based on validation results",
  "States": {
    "Choice based on validation results": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.input.errors",
          "IsPresent": true,
          "Next": "Save Invalid Shipment Record"
        }
      ],
      "Default": "Save Hash in ShipmentHash"
    },
    "Save Hash in ShipmentHash": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:putItem",
      "Parameters": {
        "TableName": "${ShipmentHashTable}",
        "Item": {
          "addrHashCode": {
            "S.$": "$.input.addrHash.addrHashCode"
          },
          "addrDateHash": {
            "S.$": "$.input.addrHash.addrDateHash"
          },
          "addrCombo": {
            "S.$": "$.input.addrHash.addrCombo"
          },
          "wasProcessed": {
            "BOOL": "false"
          }
        }
      },
      "Next": "Save Shipment Record",
      "ResultPath": "$.shipmentHashResult",
      "Retry": [
        {
          "ErrorEquals": [
            "States.TaskFailed"
          ],
          "BackoffRate": 2,
          "IntervalSeconds": 1,
          "MaxAttempts": 6,
          "Comment": "Retry DDB inserts/updates"
        }
      ]
    },
    "Save Shipment Record": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:putItem",
      "Parameters": {
        "TableName": "${ShipmentRecordTable}",
        "Item": {
          "addrDateHash": {
            "S.$": "$.input.addrHash.addrDateHash"
          },
          "recordId": {
            "S.$": "$.input.recordId"
          },
          "shipmentSubmitTime": {
            "S.$": "$$.Execution.StartTime"
          },
          "body": {
            "S.$": "States.JsonToString($.input)"
          }
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.TaskFailed"
          ],
          "BackoffRate": 2,
          "IntervalSeconds": 1,
          "MaxAttempts": 6,
          "Comment": "Retry DDB inserts/updates"
        }
      ],
      "ResultPath": null,
      "Next": "Lookup SAWB"
    },
    "Lookup SAWB": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "ResultPath": "$.AirwayBill",
      "Parameters": {
        "Payload": {
          "addrHashCode.$": "$.input.addrHash.addrHashCode"
        },          
        "FunctionName": "${SAWBShadowTableLookupHandlerFunction}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "States.TaskFailed"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 20,
          "BackoffRate": 2,
          "Comment": "Wait for AirwaysShipment Creation"
        }
      ],
      "Next": "Save AirwayBill in ShipmentRecord"
    },
    "Save AirwayBill in ShipmentRecord": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:updateItem",
      "Parameters": {
        "TableName": "${ShipmentRecordTable}",
        "Key": {
          "recordId": {
            "S.$": "$.input.recordId"
          },
          "addrDateHash": {
            "S.$": "$.input.addrHash.addrDateHash"
          }
        },
        "UpdateExpression": "SET airwayBillNumber = :airwayBillNumberRef",
        "ExpressionAttributeValues": {
          ":airwayBillNumberRef": {
            "S.$": "$.AirwayBill.Payload.shipmentRecordID"
          }
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.TaskFailed",
            "DynamoDB.InternalServerErrorException"
          ],
          "BackoffRate": 2,
          "IntervalSeconds": 1,
          "MaxAttempts": 6,
          "Comment": "Retry DDB inserts/updates"
        }
      ],
      "ResultPath": null,
      "Next": "Publish Shipment Request via SNS"
    },
    "Publish Shipment Request via SNS": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "TopicArn": "${ShipmentCarrierSNSTopic}",
        "Message": {
          "ShipmentRecordId.$": "$.input.recordId",
          "AddressHash.$": "$.input.addrHash.addrHashCode",
          "AddressDateHash.$": "$.input.addrHash.addrDateHash",
          "AirwayBillNumber.$": "$.AirwayBill.Payload.shipmentRecordID",
          "ShipmentProcessSubmissionTime.$": "$$.State.EnteredTime"
        },
        "MessageAttributes": {
          "Carrier": {
            "DataType": "String",
            "StringValue": "UPS"
          }
        }
      },
      "ResultPath": null,
      "End": true
    },
    "Save Invalid Shipment Record": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:putItem",
      "Parameters": {
        "TableName": "${InvalidShipmentRecordTable}",
        "Item": {
          "addrDateHash": {
            "S.$": "$.input.addrHash.addrDateHash"
          },
          "recordId": {
            "S.$": "$.input.recordId"
          },
          "shipmentSubmitTime": {
            "S.$": "$$.Execution.StartTime"
          },
          "body": {
            "S.$": "States.JsonToString($.input)"
          }
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "States.TaskFailed"
          ],
          "BackoffRate": 2,
          "IntervalSeconds": 1,
          "MaxAttempts": 6,
          "Comment": "Retry DDB inserts/updates"
        }
      ],
      "Next": "Handle based on Error type"
    },
    "Handle based on Error type": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.input.errors.manualfix",
          "IsPresent": true,
          "Next": "Send for Manual correction/resubmits"
        }
      ],
      "Default": "Send to Error Queue"
    },
    "Send to Error Queue": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sqs:sendMessage",
      "Parameters": {
        "MessageBody.$": "$",
        "QueueUrl": "${ShipmentDLQueueUrl}"
      },
      "End": true
    },
    "Send for Manual correction/resubmits": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sqs:sendMessage",
      "Parameters": {
        "MessageBody.$": "$",
        "QueueUrl": "${ShipmentManualResubmitQueueUrl}"
      },
      "End": true
    }
  }
}